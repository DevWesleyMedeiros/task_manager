var m=Object.defineProperty;var h=(t,e,o)=>e in t?m(t,e,{enumerable:!0,configurable:!0,writable:!0,value:o}):t[e]=o;var u=(t,e,o)=>h(t,typeof e!="symbol"?e+"":e,o);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))d(r);new MutationObserver(r=>{for(const a of r)if(a.type==="childList")for(const i of a.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&d(i)}).observe(document,{childList:!0,subtree:!0});function o(r){const a={};return r.integrity&&(a.integrity=r.integrity),r.referrerPolicy&&(a.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?a.credentials="include":r.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function d(r){if(r.ep)return;r.ep=!0;const a=o(r);fetch(r.href,a)}})();var k;(t=>{class e{constructor(){u(this,"containerBoxTask");this.containerBoxTask=document.querySelector(".container_box_tasks")}get ContainerBoxTask(){return this.ContainerBoxTask}static createNewTaskBox(){let i=document.createElement("div");return i.setAttribute("class","task_box"),i.setAttribute("role","form"),i.setAttribute("aria-labelledby","task-form"),e.applyTaskBoxStyles(i),i.innerHTML=`
                <label for="task_title">Título da tarefa:</label>
                <input type="text" class="task_title" placeholder="Título da tarefa" required>
                <label for="task_description">Descrição da tarefa:</label>
                <textarea class="task_description" placeholder="Descreva aqui sua tarefa"></textarea>
    
                <fieldset class="task_priority" aria-labelledby="priority-label">
                    <legend id="priority-label">Prioridade</legend>
                    <label for="priority_low">
                        <input type="radio" class="priority" id="priority_low" name="priority" value="Baixa"> Baixa
                    </label>
                    <label for="priority_medium">
                        <input type="radio" class="priority" id="priority_medium" name="priority" value="Média"> Média
                    </label>
                    <label for="priority_high">
                        <input type="radio" class="priority" id="priority_high" name="priority" value="Alta"> Alta
                    </label>
                </fieldset>
    
                <div class="task_date">
                    <p>Tarefa inicializada em: <span class="current-date">--</span></p>
                </div>
    
                <div class="task_label">
                    <label for="task_label">Categoria:</label>
                    <select id="task_label" name="labels" aria-label="Escolha uma categoria">
                        <option value="Trabalho">Trabalho</option>
                        <option value="Pessoal">Pessoal</option>
                        <option value="Compromissos">Compromissos</option>
                        <option value="Estudos">Estudos</option>
                    </select>
                </div>
    
                <div class="handle_task">
                    <button class="handle_task_button" aria-label="Editar Tarefa" name="editar">Editar Tarefa</button>
                    <button class="handle_task_button" aria-label="Finalizar Tarefa" name="finalizar">Finalizar Tarefa</button>
                </div>
            `,i}static applyTaskBoxStyles(i){const l={border:"1px solid #ccc",padding:"1rem",marginBottom:"1rem",borderRadius:"8px",backgroundColor:"#fff",boxShadow:"0 2px 4px rgba(0, 0, 0, 0.1)",display:"flex",flexDirection:"column",gap:"0.5rem"};for(const s in l)l.hasOwnProperty(s)&&(i.style[s]=l[s])}get BoxTaskChildren(){return e.createNewTaskBox()}}t.NewCardTask=e;class o{constructor(){u(this,"deleteTaskButton");this.deleteTaskButton=document.getElementById("delete_task")}deleteBoxTaskChild(i){const l=document.querySelector(".container_box_tasks");l&&i?l.removeChild(i):console.error("Não foi possível encontrar o pai ou o filho.")}setupDeleteButtons(){document.querySelectorAll(".handle_task_button[name='excluir']").forEach(l=>{l.addEventListener("click",s=>{const c=s.target.closest(".task_box");c&&this.deleteBoxTaskChild(c)})})}}t.DeleteNewTask=o;class d{constructor(){u(this,"showTasksCreatedButton");this.showTasksCreatedButton=document.getElementById("show_registered_tasks")}}t.ShowAllTasks=d;class r{constructor(){u(this,"inputSearchTask");this.inputSearchTask=document.getElementById("task_search")}}t.FilterTask=r})(k||(k={}));var p;(t=>{class e{constructor(){u(this,"inputTaskTitle");this.inputTaskTitle=document.querySelector(".task_title")}get InputTaskTitle(){return this.inputTaskTitle}setInputTaskTitleProperty(s,c){var n;return this.inputTaskTitle&&(this.inputTaskTitle.setAttribute(s,c),(n=this.InputTaskTitle)==null||n.classList.add("cursor-pointer")),this.inputTaskTitle}}t.TaskTitle=e;class o{constructor(){u(this,"inputTaskDescription");this.inputTaskDescription=document.querySelector(".task_description")}get InputTaskDescription(){return this.inputTaskDescription}setInputTaskDescriptionProperty(s,c){var n;return this.inputTaskDescription&&(this.inputTaskDescription.setAttribute(s,c),(n=this.inputTaskDescription)==null||n.classList.add("cursor-pointer")),this.inputTaskDescription}}t.TaskDescription=o;class d{constructor(){u(this,"listInputRadioElements");u(this,"divBoxTextCard");this.listInputRadioElements=[...document.querySelectorAll(".priority")],this.divBoxTextCard=document.querySelector(".box_task"),this.listInputRadioElements.forEach(s=>{s.addEventListener("click",c=>{const n=c.target;this.divBoxTextCard&&(n.id==="priority_high"?this.divBoxTextCard.style.backgroundColor="#ff4c4c":n.id==="priority_medium"?this.divBoxTextCard.style.backgroundColor="#ffa500":n.id==="priority_low"?this.divBoxTextCard.style.backgroundColor="#3cb371":this.divBoxTextCard.style.backgroundColor="#fff")})})}setInputsTaskPriorities(s,c){return this.listInputRadioElements.map(n=>(n.setAttribute(s,c),n.classList.add("cursor-pointer"),n))}}t.TaskPriority=d;class r{constructor(){u(this,"currentDate");u(this,"spanFormatCurrentDate");this.spanFormatCurrentDate=document.querySelector(".current-date"),this.currentDate="",this.spanFormatCurrentDate&&(this.spanFormatCurrentDate.innerHTML=this.currentSystemDate)}get currentSystemDate(){let s=new Date;const c=[s.getDate().toString().padStart(2,"0"),(s.getMonth()+1).toString().padStart(2,"0"),s.getFullYear().toString()];return this.currentDate=c.join(" / "),this.currentDate}}t.GetTaskDate=r;class a{constructor(){u(this,"selectElement");const s=document.getElementById("task_label");if(!s)throw new Error("Elemento <select> não foi encontrado.");this.selectElement=s}get SelectElementOption(){return this.selectElement}}t.TaskLabelCategory=a;class i{constructor(){u(this,"buttonManagerCurrentTask");this.buttonManagerCurrentTask=[...document.querySelectorAll(".handle_task_button")],this.buttonManagerCurrentTask.forEach(s=>{s.addEventListener("click",c=>{const n=c.target;n.name==="finalizar"?T(!0):n.name==="editar"&&T(!1)})})}}t.ManagerCurrentTask=i})(p||(p={}));function T(t){const e=document.querySelector(".task_title"),o=document.querySelector(".task_description"),d=[...document.querySelectorAll(".priority")],r=document.getElementById("task_label");e&&(e.disabled=t),o&&(o.disabled=t),d.forEach(a=>{a.disabled=t}),r&&(r.disabled=t)}document.addEventListener("DOMContentLoaded",()=>{new k.DeleteNewTask().deleteBoxTaskChild(),new k.ShowAllTasks,new k.FilterTask,new p.TaskTitle,new p.TaskDescription,new p.TaskPriority,new p.GetTaskDate,new p.TaskLabelCategory,new p.ManagerCurrentTask;const t=document.getElementById("make_task");t==null||t.addEventListener("click",()=>{const e=k.NewCardTask.createNewTaskBox(),o=document.querySelector(".container_box_tasks");o==null||o.appendChild(e),new k.DeleteNewTask().setupDeleteButtons()})});
